---
import { type CollectionEntry, getCollection } from 'astro:content';
import BlogPost from '../../layouts/BlogPost.astro';
import { render } from 'astro:content';

export async function getStaticPaths() {
	const posts = await getCollection('blog');
	return posts.map((post) => ({
		params: { slug: post.id },
		props: post,
	}));
};

const posts = (await getCollection('blog')).sort(
	(a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf(),
).map(
	(post) => ({
		slug: post.id,
		url: '/blog/' + post.id,
		title: post.data.title,
		pubDate: post.data.pubDate,
	})
);

type Props = CollectionEntry<'blog'>;

const post = Astro.props;
const currentIndex = posts.findIndex((p) => p.slug === post.id);
const previous = currentIndex < posts.length - 1 ? posts[currentIndex + 1] : null;
const next = currentIndex > 0 ? posts[currentIndex - 1] : null;

const { Content } = await render(post);
---

<BlogPost {...post.data} previous={previous} next={next}>
	<Content />
</BlogPost>
