---
import type { CollectionEntry } from 'astro:content';
import Comments from '../components/Comments'

import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import FormattedDate from '../components/FormattedDate.astro';

import './styles.css';

type SiblingLink = {
	slug: string;
	title: string;
	url: string;
};
type Props = CollectionEntry<'blog'>['data'] & {
	previous?: SiblingLink | null;
	next?: SiblingLink | null;
};

const { 
	title, 
	description, 
	pubDate = new Date(), 
	updatedDate, 
	heroImage, 
	orientation,
	hideComments,
	hideTitle,
	previous,
	next,
} = Astro.props;
---

<!doctype html>
<html lang="en">
	<head>
		<BaseHead title={title} description={description} />
	</head>
	<body>
		<Header />
		<main>
			<article class={orientation}>
				<div class="hero-image">
					{heroImage && <img width={1020} height={510} src={heroImage} alt="" />}
				</div>
				<div class="prose">
					{!hideTitle && <>
						<div class="title">
							<div class="date">
								{pubDate && <FormattedDate date={pubDate} />}
								{
									updatedDate && (
										<div class="last-updated-on">
											Last updated on <FormattedDate date={updatedDate} />
										</div>
									)
								}
							</div>
							<h1>{title}</h1>
							<hr />
						</div>
					</>}
					<slot />
					<div class="navigation mt-8 flex justify-between text-xs">
						{previous && <a href={previous.url} class="px-4 py-2 rounded-4xl bg-gray-100 hover:bg-gray-200">
							← {previous.title}
						</a>}
						<div></div>
						{next && <a href={next.url} class="px-4 py-2 rounded-4xl bg-gray-100 hover:bg-gray-200">
							{next.title} →
						</a>}
					  </div>
				</div>
			</article>
			{!hideComments && <>
				<div class="comments">
					<Comments client:only="react" />
				</div>
			</>}
		</main>
		<Footer />
	</body>
</html>
